{"version":3,"sources":["../../js/Director.js"],"names":["Director","dataStore","getInstance","speed","minTop","window","innerHeight","maxTop","top","Math","random","get","push","i","y","birdsY","time","isGameOver","draw","pencils","x","width","length","shift","innerWidth","createPencil","forEach","value","index","timer","requestAnimationFrame","run","put","cancelAnimationFrame","destroy","instance"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;IAEaA,Q,WAAAA,Q;AACT,wBAAa;AAAA;;AACT,aAAKC,SAAL,GAAiB,qBAAUC,WAAV,EAAjB;AACA,aAAKC,KAAL,GAAa,CAAb;AACH;;;;uCASa;AACV,gBAAMC,SAASC,OAAOC,WAAP,GAAmB,CAAlC;AACA,gBAAMC,SAASF,OAAOC,WAAP,GAAmB,CAAlC;AACA,gBAAME,MAAMJ,SAASK,KAAKC,MAAL,MAAeH,SAASH,MAAxB,CAArB;;AAEA,iBAAKH,SAAL,CAAeU,GAAf,CAAmB,SAAnB,EAA8BC,IAA9B,CAAmC,uBAAaJ,GAAb,CAAnC;AACA,iBAAKP,SAAL,CAAeU,GAAf,CAAmB,SAAnB,EAA8BC,IAA9B,CAAmC,2BAAeJ,GAAf,CAAnC;AAEH;;;qCAEW;AACR,iBAAI,IAAIK,CAAR,EAAUA,KAAG,CAAb,EAAeA,GAAf,EAAmB;AACf,qBAAKZ,SAAL,CAAeU,GAAf,CAAmB,OAAnB,EAA4BG,CAA5B,CAA8BD,CAA9B,IAAmC,KAAKZ,SAAL,CAAeU,GAAf,CAAmB,OAAnB,EAA4BI,MAA5B,CAAmCF,CAAnC,CAAnC;AACH;AACD,iBAAKZ,SAAL,CAAeU,GAAf,CAAmB,OAAnB,EAA4BK,IAA5B,GAAmC,CAAnC;AACH;;;8BAEI;AAAA;;AACD,gBAAG,CAAC,KAAKC,UAAT,EAAoB;AAChB;AACA,qBAAKhB,SAAL,CAAeU,GAAf,CAAmB,YAAnB,EAAiCO,IAAjC;;AAEA,oBAAMC,UAAU,KAAKlB,SAAL,CAAeU,GAAf,CAAmB,SAAnB,CAAhB;AACA,oBAAGQ,QAAQ,CAAR,EAAWC,CAAX,GAAeD,QAAQ,CAAR,EAAWE,KAA1B,IAAmC,CAAnC,IAAsCF,QAAQG,MAAR,KAAiB,CAA1D,EAA4D;AACxDH,4BAAQI,KAAR;AACAJ,4BAAQI,KAAR;AACH;;AAED,oBAAGJ,QAAQ,CAAR,EAAWC,CAAX,IAAgB,CAACf,OAAOmB,UAAP,GAAoBL,QAAQ,CAAR,EAAWE,KAAhC,IAAuC,CAAvD,IAA0DF,QAAQG,MAAR,KAAiB,CAA9E,EAAgF;AAC5E,yBAAKG,YAAL;AACH;;AAED;AACA,qBAAKxB,SAAL,CAAeU,GAAf,CAAmB,SAAnB,EAA8Be,OAA9B,CAAsC,UAASC,KAAT,EAAeC,KAAf,EAAqB;AACvDD,0BAAMT,IAAN;AACH,iBAFD;;AAIA;AACA,qBAAKjB,SAAL,CAAeU,GAAf,CAAmB,MAAnB,EAA2BO,IAA3B;;AAEA;AACA,qBAAKjB,SAAL,CAAeU,GAAf,CAAmB,OAAnB,EAA4BO,IAA5B;;AAEA,oBAAIW,QAAQC,sBAAsB;AAAA,2BAAI,MAAKC,GAAL,EAAJ;AAAA,iBAAtB,CAAZ;AACA,qBAAK9B,SAAL,CAAe+B,GAAf,CAAmB,OAAnB,EAA2BH,KAA3B;AACH,aA3BD,MA2BK;AACDI,qCAAqB,KAAKhC,SAAL,CAAeU,GAAf,CAAmB,OAAnB,CAArB;AACA,qBAAKV,SAAL,CAAeiC,OAAf;AACH;AAEJ;;;sCAzDmB;AAChB,gBAAG,CAAClC,SAASmC,QAAb,EAAsB;AAClBnC,yBAASmC,QAAT,GAAoB,IAAInC,QAAJ,EAApB;AACH;AACD,mBAAOA,SAASmC,QAAhB;AACH","file":"Director.js","sourcesContent":["import {DataStore} from \"./base/DataStore.js\";\r\nimport {UpPencil} from \"./runtime/UpPencil.js\";\r\nimport {DownPencil} from \"./runtime/DownPencil.js\";\r\n\r\nexport class Director{\r\n    constructor(){\r\n        this.dataStore = DataStore.getInstance();\r\n        this.speed = 2;\r\n    }\r\n\r\n    static getInstance(){\r\n        if(!Director.instance){\r\n            Director.instance = new Director();\r\n        }\r\n        return Director.instance;\r\n    }\r\n\r\n    createPencil(){\r\n        const minTop = window.innerHeight/8;\r\n        const maxTop = window.innerHeight/2;\r\n        const top = minTop + Math.random()*(maxTop - minTop);\r\n\r\n        this.dataStore.get('pencils').push(new UpPencil(top));\r\n        this.dataStore.get('pencils').push(new DownPencil(top));\r\n\r\n    }\r\n\r\n    birdsEvent(){\r\n        for(let i;i<=2;i++){\r\n            this.dataStore.get('birds').y[i] = this.dataStore.get('birds').birdsY[i];\r\n        }\r\n        this.dataStore.get('birds').time = 0;\r\n    }\r\n\r\n    run(){\r\n        if(!this.isGameOver){\r\n            //绘制背景\r\n            this.dataStore.get('background').draw();\r\n\r\n            const pencils = this.dataStore.get('pencils');\r\n            if(pencils[0].x + pencils[0].width <= 0&&pencils.length===4){\r\n                pencils.shift();\r\n                pencils.shift();\r\n            }\r\n\r\n            if(pencils[0].x <= (window.innerWidth - pencils[0].width)/2&&pencils.length===2){\r\n                this.createPencil();\r\n            }\r\n\r\n            //绘制铅笔\r\n            this.dataStore.get('pencils').forEach(function(value,index){\r\n                value.draw();\r\n            });\r\n\r\n            //绘制草地\r\n            this.dataStore.get('Land').draw();\r\n\r\n            //绘制小鸟\r\n            this.dataStore.get('birds').draw();\r\n\r\n            let timer = requestAnimationFrame(()=>this.run());\r\n            this.dataStore.put('timer',timer);\r\n        }else{\r\n            cancelAnimationFrame(this.dataStore.get('timer'));\r\n            this.dataStore.destroy();\r\n        }\r\n\r\n    }\r\n}"]}